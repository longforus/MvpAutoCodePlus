buildscript {
    ext.kotlin_version = '1.3.61'

    repositories {
        //        maven { url 'http://192.168.2.39:8908/repository/maven-public/' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
        maven { url "https://www.jetbrains.com/intellij-repository/releases" }
        maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.intellij' version '0.4.2'
}

version '1.4.1'
group 'com.longforus'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.intellij'

sourceCompatibility = 1.8
targetCompatibility = 1.8

//sourceSets {
//    main {
//        java {
//            srcDir "${project.rootDir.absolutePath}/thirdParty/javapoet/java/src"
//        }
//    }
//}

repositories {
    //    maven{ url 'http://192.168.2.39:8908/repository/maven-public/'}
    maven { url 'https://maven.aliyun.com/repository/public' }
    mavenCentral()
    maven { url "https://www.jetbrains.com/intellij-repository/releases" }
    maven { url "https://jetbrains.bintray.com/intellij-third-party-dependencies" }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

if (!hasProperty('StudioCompilePath')) {
    throw new GradleException("No StudioCompilePath value was set, please create gradle.properties file")
}

intellij {
    version '2019.2'
    plugins 'java'
    plugins 'org.jetbrains.kotlin:1.3.61-release-IJ2019.2-1' //here
    //        plugins 'org.jetbrains.kotlin:1.3.21-release-IJ2018.2-1' //here
    //    version '2018.2'
    //    plugins 'org.jetbrains.kotlin:1.2.61-release-IJ2018.2-1' //here
    //    version '2018.1'
    //    plugins 'org.jetbrains.kotlin:1.2.60-release-IJ2018.1-1' //here
    //    version '2017.3'
    //    plugins 'org.jetbrains.kotlin:1.2.61-release-IJ2017.3-1' //here
    intellij.updateSinceUntilBuild false
    intellij.localPath = project.hasProperty("StudioRunPath") ? StudioRunPath : StudioCompilePath
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compileOnly fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    compileOnly fileTree(dir: "$StudioCompilePath/plugins/java/lib", include: ['*.jar'])
    compileOnly fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])
    testCompile fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    testCompile fileTree(dir: "$StudioCompilePath/plugins/java/lib", include: ['*.jar'])
    testCompile fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])
//    compile "com.jetbrains.intellij.java:java-psi:192.7142.36"
//    compileOnly "com.jetbrains.intellij.java:java-impl:192.7142.36"
//    compileOnly "com.jetbrains.intellij.java:java:192.7142.36"
    //    compile 'com.squareup:javapoet:1.11.0'
    //    testCompile group: 'junit', name: 'junit', version: '4.12'
}

patchPluginXml {
    changeNotes """<h3>Fix Android studio 3.5+ menu text.</h3>
<br/>
<a href="https://github.com/longforus/MvpAutoCodePlus/blob/master/CHANGELOG.md"><b>Full Changelog History</b></a>"""
}

publishPlugin {
    username publishUserName
    password publishPassword
}

//指定编译的编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task verifySetup() {
    doLast {
        def ideaJar = "$StudioCompilePath/lib/idea.jar"
        if (!file(ideaJar).exists()) {
            throw new GradleException("$ideaJar not found, set StudioCompilePath in gradle.properties")
        }
    }
}

compileJava.dependsOn verifySetup